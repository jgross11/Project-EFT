@using Microsoft.AspNetCore.Http;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@using Project_EFT.Data_Classes;
@{ISession session = HttpContextAccessor.HttpContext.Session; }
@{
    ViewData["Title"] = "Home Page";
    if (session.ContainsKey("userInfo"))
    {
        StandardUser user = session.GetComplexObject<StandardUser>("userInfo");
        <h2>Logged in as standard user: </h2>
        <br>
        <h3>@user.Email</h3>
        <br>
        <h3>@user.Username</h3>
        <br />
        if (user.Submissions.Count != 0)
        {


            int[] keys = new int[user.Submissions.Count];
            user.Submissions.Keys.CopyTo(keys, 0);
            Array.Sort(keys);
            string clearErrorMessage = null;

            foreach (int i in keys)
            {
                <button class="accordion active">Problem @i Submissions </button>
                <div class="panel" style="display: none;">
                    <table>
                        <tr>
                            <th>Answer</th>
                            <th>Date</th>
                            <th>Correctness</th>
                        </tr>
                        @foreach (AnswerSubmission sub in user.Submissions[i])
                        {
                            <tr>
                                <th>@sub.Content</th>
                                <th>@sub.SubmissionDate</th>
                                @if (sub.IsCorrect)
                                {
                                    <th class="success">Correct</th>
                                }
                                else
                                {
                                    <th class="error">Incorrect</th>
                                }
                            </tr>

                            if (session.ContainsKey("problem" + i + "error")) 
                            {
                                clearErrorMessage = session.GetString("problem" + i + "error");
                            }
                        }

                    </table>
                    <button onclick="window.location.href='/Problem/WipeProblemSubmissions?problemID='+i">Wipe submissions for problem @i</button>

                </div>
                if (clearErrorMessage != null) { 
                    <div class="error">@session.GetString("problem" + i + "error")</div>
                    session.Remove("problem" + i + "error");
                }
                <br />

            }


        }
        <script>
            var acc = document.getElementsByClassName("accordion");
            var i;

            for (i = 0; i < acc.length; i++) {
                acc[i].addEventListener("click", function () {
                    this.classList.toggle("active");
                    var panel = this.nextElementSibling;
                    if (panel.style.display === "block") {
                        panel.style.display = "none";
                    } else {
                        panel.style.display = "block";
                    }
                });
            }
        </script>
    }
    else if (session.ContainsKey("adminInfo"))
    {
        string errorMessage = session.TryGetAndRemoveKey<string>("errorMessage");
        string successMessage = session.TryGetAndRemoveKey<string>("successMessage");
        string username = session.TryGetAndRemoveKey<string>("username");
        Admin admin = session.GetComplexObject<Admin>("adminInfo");
        <h2>Logged in as admin: </h2>
        <br>
        <h3>@admin.Email</h3>
        <br>
        <h3>@admin.Username</h3>
        <br>

        <form id="delete-account" action="/Home/DeleteUserAccount" method="post">
            Enter username of account to delete:<br>
            <input type="text" id="username" name="username" value="@username" /><br>
            <div class="error" id="username-error"></div>
            <input type="button" value="Delete Account" onclick="verifyDeleteAccount()">
            <div class="error">@errorMessage</div>
            <div class="success">@successMessage</div>
        </form>
        <br>
        <br>
        if (admin.Submissions.Count > 0)
        {
            <h3>Previous admin actions</h3>
            <table>
                <tr>
                    <th>Action</th>
                    <th>Date</th>
                </tr>
                @{
                    // generate row for each problem in problems array
                    foreach (Submission sub in admin.Submissions)
                    {
                        <tr>
                            <th>@sub.Content</th>
                            <th>@sub.SubmissionDate</th>
                        </tr>
                    }
                }
            </table>
        }

        <script>
            function verifyDeleteAccount() {
                let usernameElement = document.getElementById("username");
                let username = usernameElement.value.trim();
                if (verifyInformation(username, TYPE_USERNAME)) {
                    document.getElementById("username-error").innerHTML = "";
                    usernameElement.value = username;
                    document.getElementById("delete-account").submit();
                } else {
                    document.getElementById("username-error").innerHTML = "Please enter a valid username.";
                }
            }

        </script>
    }
    else
    {
        string loginErrorMessage = session.TryGetAndRemoveKey<string>("errorMessage");
        string usernameFormatError = session.TryGetAndRemoveKey<string>("usernameFormatError");
        string passwordFormatError = session.TryGetAndRemoveKey<string>("passwordFormatError");
        <script src="https://cdnjs.cloudflare.com/ajax/libs/blueimp-md5/2.12.0/js/md5.min.js"></script>
        <div>
            <form id="login" action="~/Home/login" method="post">
                <label>Username:</label>
                <input type="text" id="username" name="username" /><br />
                <div class="error" id="username-error">@usernameFormatError</div>
                <input type="hidden" id="password" name="password" />
            </form>
            <label>Password:</label>
            <input type="password" id="frontPassword" name="frontPassword" /><br />
            <div class="error" id="password-error">@passwordFormatError</div>
            <input type="button" value="Login!" onclick="verifyLogin()" /><br />
            <div class="error" id="login-error"> @loginErrorMessage</div>
        </div>
        <div>
            <a href="/signup">Not already a user?  Click here to make an account!</a><br />
            <a href="/Recovery">Click here to recover account information.</a>
        </div>
    }
    <script>
        function verifyLogin() {
            let usernameElement = document.getElementById("username");
            let passwordEntryElement = document.getElementById("frontPassword");
            let passwordSubmissionElement = document.getElementById("password");
            let username = usernameElement.value.trim();
            let password = passwordEntryElement.value.trim();
            let usernameGood = verifyInformation(username, TYPE_USERNAME);
            let passwordGood = verifyInformation(password, TYPE_PASSWORD);
            if (usernameGood && passwordGood) {
                usernameElement.value = username;
                passwordSubmissionElement.value = md5(password);
                document.getElementById("login").submit();
            } else {
                document.getElementById("username-error").innerHTML = usernameGood ? "" : "Please enter a valid username.";
                document.getElementById("password-error").innerHTML = passwordGood ? "" : "Please enter a valid password.";
            }
        }
    </script>
}
